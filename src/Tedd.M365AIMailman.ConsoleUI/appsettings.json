{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug", // Maintain lower minimum level for development visibility
      "Override": {
        "Microsoft": "Information", // Elevate verbosity for Microsoft components during development
        "System": "Information" // Elevate verbosity for System components during development
      }
    },
    "WriteTo": [
      { // --- Console Sink Configuration ---
        "Name": "Console",
        "Args": {
          // Utilizing a distinct template for console output optimization during development
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] ({SourceContext:l}) {Message:lj}{NewLine}{Exception}"
        }
      },
      { // --- File Sink Configuration ---
        "Name": "File",
        "Args": {
          // Define the path structure for log files. Includes rolling file naming convention.
          "path": "Logs/MyApplication-.log", // Example path; customize as necessary. Consider environment variables for deployment flexibility.
          // Specify the frequency for creating new log files.
          "rollingInterval": "Day", // Common strategy: daily log rotation. Alternatives: Hour, Month, Year, Infinite.
          // Define the message format for file logs. Often more detailed than console.
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] ({SourceContext}) {Message:lj}{NewLine}{Exception}",
          // Optional: Set a maximum size for individual log files (e.g., 1GB).
          "fileSizeLimitBytes": 1073741824,
          // Optional: Retain a specific number of recent log files. null = keep all.
          "retainedFileCountLimit": 31, // Example: Retain logs for approximately one month.
          // Optional: Enable rolling based on file size in addition to interval.
          "rollOnFileSizeLimit": true
        }
      }
    ],
    // Optional: Enrichers can add contextual information to all log events.
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ]
    // Optional: Filters can selectively discard log events before they reach sinks.
    // "Filter": [ ... ]
    // Optional: Destructurers control how complex objects are serialized in logs.
    // "Destructure": [ ... ]
  },
  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/",
    "TenantId": "xxx", // Or "common" or "organizations"
    "ClientId": "xxx",
    "ClientSecret": "xxx" // Use secure storage for secrets
    // For production, consider Certificate Thumbprint or Client Secret (using secure storage)
  },
  "Graph": {
    "BaseUrl": "https://graph.microsoft.com/v1.0"
  },
  "SemanticKernel": {
    "ServiceType": "OpenAI", // Or "AzureOpenAI"
    "DeploymentOrModelId": "gpt-4.1-mini", // e.g., gpt-4.1-mini or o4-mini
    // --- Azure OpenAI Specific ---
    "Endpoint": "", // Required if ServiceType is AzureOpenAI
    // --- OpenAI Specific ---
    "OrgId": "", // Optional for OpenAI
    // --- Common for both ---
    "ApiKey": "sk-xxx" // Required if ServiceType is OpenAI
  },
  "EmailProcessing": {
    "TargetUserId": "post@tedd.no",
    "MaxEmailAge": "1.00:00:00",
    "MinEmailAge": "0.00:05:00",
    "SourceFolderName": "Inbox",
    "TargetFolders": {
      "Newsletter": "Mailman/Newsletter",
      "Spam": "Mailman/Junk Email",
      "Deleted": "Mailman/Deleted Items",
      "Social Media or similar": "Mailman/Social",
      "Purchases or Receipts (not reminders)": "Mailman/Receipts",
      "Automated System Messages or Cron jobs": "Mailman/System",
      "Google Alerts": "Mailman/Google Alerts",
      "DMARC reports": "Mailman/DMARC"
    },
    "PollingIntervalSeconds": 300,
    "MaxEmailsPerRun": 100
  }
}
